595 * (1/2.83467)
l
w0 - (2*l)
paste( "pdfcrop --bbox '",
-l*bp2mm, " ",
-t*bp2mm," ",
-l *bp2mm, " ",
-t *bp2mm, "' --clip EvoLang11_test.pdf EvoLang11_crop.pdf",
sep = '')
l*bp2mm
w0 = 210
h0 = 297.1
w = 152.4
h = 228.6
l = (w0 - w)/2
t = (h0 - h)/2
w0 - (2*l)
bp2mm = 2.83467
paste( "pdfcrop --margins '",
-l*bp2mm, " ",
-t*bp2mm," ",
0, " ",
0, "' --clip EvoLang11_test.pdf EvoLang11_crop.pdf",
sep = '')
paste( "pdfcrop --margins '",
-l*bp2mm, " ",
-t*bp2mm," ",
0, " ",
0, "' --clip --bbox '0 0 0 0' EvoLang11_test.pdf EvoLang11_crop.pdf",
sep = '')
w0 = 210
h0 = 297.1
w = 152.4
h = 228.6
l = (w0 - w)/2
t = (h0 - h)/2
w0 - (2*l)
bp2mm = 2.83467
paste( "pdfcrop --margins '",
-l*bp2mm, " ",
-t*bp2mm," ",
0, " ",
0, "' --clip --bbox '",
0,0,w0*bp2mm,h0*bp2mm,
"' EvoLang11_test.pdf EvoLang11_crop.pdf",
sep = '')
paste( "pdfcrop --margins '",
-l*bp2mm, " ",
-t*bp2mm," ",
0, " ",
0, "' --clip --bbox '",
0," ",0," ",w0*bp2mm," ",h0*bp2mm,
"' EvoLang11_test.pdf EvoLang11_crop.pdf",
sep = '')
paste( "pdfcrop --margins '",
-l*bp2mm, " ",
-t*bp2mm," ",
-l*bp2mm, " ",
-t*bp2mm, "' --clip --bbox '",
0," ",0," ",w0*bp2mm," ",h0*bp2mm,
"' EvoLang11_test.pdf EvoLang11_crop.pdf",
sep = '')
w0 = 210
h0 = 297.1
w = 152.35
h = 228.55
l = (w0 - w)/2
t = (h0 - h)/2
w0 - (2*l)
bp2mm = 2.83467
paste( "pdfcrop --margins '",
-l*bp2mm, " ",
-t*bp2mm," ",
-l*bp2mm, " ",
-t*bp2mm, "' --clip --bbox '",
0," ",0," ",w0*bp2mm," ",h0*bp2mm,
"' EvoLang11_test.pdf EvoLang11_crop.pdf",
sep = '')
library(ape)
rtree(10)
t = rtree(10)
d = matrix(rnorm(100),nrow=10)
t
plot(t)
d
d[upper.tri(d)] = d[lower.tri(d)]
diag(d) = 0
library(ecodist)
??patristic
vcov(t)
?vcov
d = read.csv("~/Documents/MPI/SemanticsPragmatics/Pr")
d = read.csv("~/Documents/MPI/SemanticsPragmatics/2015Course/Projects/Slonimska/")
d = read.csv("~/Documents/MPI/SemanticsPragmatics/2015Course/Projects/Slonimska/wals-language.csv/language.csv")
table(d$X93A.Position.of.Interrogative.Phrases.in.Content.Questions, d$X82A.Order.of.Subject.and.Verb)
132/547
89/32
table(d$X93A.Position.of.Interrogative.Phrases.in.Content.Questions, d$X83A.Order.of.Object.and.Verb)
76/317
156/253
d$X81A.Order.of.Subject..Object.and.Verb
d$WO = d$X81A.Order.of.Subject..Object.and.Verb
table(d$IP,d$WO)
d$IP = d$X93A.Position.of.Interrogative.Phrases.in.Content.Questions
d$IP[d$IP %in% c("3 Mixed")] = NA
d$WO = d$X81A.Order.of.Subject..Object.and.Verb
table(d$IP,d$WO)
d$
d = read.csv("~/Documents/MPI/SemanticsPragmatics/2015Course/Projects/Slonimska/wals-language.csv/language.csv")
d$IP = d$X93A.Position.of.Interrogative.Phrases.in.Content.Questions
d$IP[d$IP %in% c("3 Mixed")] = NA
d$IP[d$IP %in% c("")] = NA
d$IP = factor(d$IP)
d$WO = d$X81A.Order.of.Subject..Object.and.Verb
table(d$IP,d$WO)
table(d$IP,d$WO) / colSums(table(d$IP,d$WO))
table(d$IP,d$WO) / rep(colSums(table(d$IP,d$WO)),each=2)
0.1923077+0.8076923
librar(lme4)
library(lme4)
d$SO = d$X82A.Order.of.Subject.and.Verb
table(d$SO)
library(lme4)
d = read.csv("~/Documents/MPI/SemanticsPragmatics/2015Course/Projects/Slonimska/wals-language.csv/language.csv")
d$IP = d$X93A.Position.of.Interrogative.Phrases.in.Content.Questions
d$IP[d$IP %in% c("3 Mixed")] = NA
d$IP[d$IP %in% c("")] = NA
d$IP = factor(d$IP)
d$WO = d$X81A.Order.of.Subject..Object.and.Verb
table(d$IP,d$WO) / rep(colSums(table(d$IP,d$WO)),each=2)
d$SO = d$X82A.Order.of.Subject.and.Verb
d$SO[d$SO==""] = NA
d$SO[d$SO=="3 No dominant order"] = NA
d$family
d$SO = d$X82A.Order.of.Subject.and.Verb
d$SO[d$SO==""] = NA
d$SO[d$SO=="3 No dominant order"] = NA
d$SO = factor(d$SO)
table(d$SO)
table(d$IP,d$WO) / rep(colSums(table(d$IP,d$WO)),each=2)
library(lme4)
d = read.csv("~/Documents/MPI/SemanticsPragmatics/2015Course/Projects/Slonimska/wals-language.csv/language.csv")
d$IP = d$X93A.Position.of.Interrogative.Phrases.in.Content.Questions
d$IP[d$IP %in% c("3 Mixed")] = NA
d$IP[d$IP %in% c("")] = NA
d$IP = factor(d$IP)
d$WO = d$X81A.Order.of.Subject..Object.and.Verb
table(d$IP,d$WO) / rep(colSums(table(d$IP,d$WO)),each=2)
d$SV = d$X82A.Order.of.Subject.and.Verb
d$SV[d$SV==""] = NA
d$SV[d$SV=="3 No dominant order"] = NA
d$SV = d$SV == "1 SV"
m0 = glmer(SV ~ 1 + (1 +IP| family), data=d)
m1 = glmer(SV ~ 1 + (1 +IP| family), data=d)
anova(m0,m1)
m1 = glmer(SV ~ 1 + IP (1 +IP| family), data=d)
anova(m0,m1)
m1 = glmer(SV ~ 1 + IP + (1 +IP| family), data=d)
m0 = glmer(SV ~ 1 + (1 +IP| family), data=d, family = binomial)
m0 = glmer(SV ~ 1 + (1 | family), data=d, family = binomial)
m1 = glmer(SV ~ 1 + IP + (1 | family), data=d, family = binomial)
anova(m0,m1)
m0 = glmer(SV ~ 1 + (1 +IP | family), data=d[!is.na(d$IP),], family = binomial)
m0 = glmer(SV ~ 1 + (1  | family), data=d[!is.na(d$IP),], family = binomial)
m1 = glmer(SV ~ 1 + IP + (1 | family), data=d[!is.na(d$IP),], family = binomial)
anova(m0,m1)
table(d$macroarea)
m0 = glmer(SV ~ 1 + (1  | family) + (1| macroarea), data=d[!is.na(d$IP),], family = binomial)
m1 = glmer(SV ~ 1 + IP + (1 | family) + (1| macroarea), data=d[!is.na(d$IP),], family = binomial)
anova(m0,m1)
getMEText = function(r,ef, wald=NULL){
AIC = r[2,]$AIC
loglikDiff = signif(diff(r$logLik),2)
chi = round(r$Chisq[2],2)
df = r$`Chi Df`[2]
p = signif(r$`Pr(>Chisq)`[2],2)
wald.text = ""
if(!is.null(wald)){
est = signif(wald[1],2)
stder = signif(wald[2],2)
t = signif(wald[3],2)
wptext = ""
if(!is.na(wald[4])){
wptext = paste(", Wald p =",signif(wald[4],2))
}
wald.text = paste("beta = ",est,", std.err = ",stder, ", Wald t = ",t,wptext,';')
}
begin = 'There was no significant'
if(p <0.1){
begin = "There was a marginal"
}
if(p < 0.05){
begin = 'There was a significant'
}
return(paste(begin,ef,"(",wald.text,"log likelihood difference =",
loglikDiff,", df = ",df,", Chi Squared =", chi,", p = ",p,")."))
}
summary(m1)
table(d$WO,d$IP) / rep(colSums(table(d$WO,d$IP)),each=2)
table(d$WO,d$IP) / rep(colSums(table(d$WO,d$IP)),2)
table(d$WO,d$IP) / rowSums(table(d$WO,d$IP))
table(d$IP)
---
title: "Test link between subject-verb order and interrogative position"
output: pdf_document
---
# Load libraries
```{r warning=F, message=F}
library(lme4)
```
```{r echo=F}
getMEText = function(r,ef, wald=NULL){
AIC = r[2,]$AIC
loglikDiff = signif(diff(r$logLik),2)
chi = round(r$Chisq[2],2)
df = r$`Chi Df`[2]
p = signif(r$`Pr(>Chisq)`[2],2)
wald.text = ""
if(!is.null(wald)){
est = signif(wald[1],2)
stder = signif(wald[2],2)
t = signif(wald[3],2)
wptext = ""
if(!is.na(wald[4])){
wptext = paste(", Wald p =",signif(wald[4],2))
}
wald.text = paste("beta = ",est,", std.err = ",stder, ", Wald t = ",t,wptext,';')
}
begin = 'There was no significant'
if(p <0.1){
begin = "There was a marginal"
}
if(p < 0.05){
begin = 'There was a significant'
}
return(paste(begin,ef,"(",wald.text,"log likelihood difference =",
loglikDiff,", df = ",df,", Chi Squared =", chi,", p = ",p,")."))
}
logit2per = function(X){
return(exp(X)/(1+exp(X)))
}
```
# Load data
```{r}
d = read.csv("wals-language.csv/language.csv")
```
# Make variables
```{r}
d$IP = d$X93A.Position.of.Interrogative.Phrases.in.Content.Questions
d$IP[d$IP %in% c("3 Mixed")] = NA
d$IP[d$IP %in% c("")] = NA
d$IP[d$IP=="1 initial interrogative phrase"] = "Initial"
d$IP[d$IP=="2 Not initial interrogative phrase"] = "Non-Initial"
table(d$IP)
d$IP[d$IP=="1 initial interrogative phrase"] = "Initial"
d$IP = as.character(d$IP)
d$IP[d$IP=="1 initial interrogative phrase"] = "Initial"
d$IP[d$IP=="2 Not initial interrogative phrase"] = "Non-Initial"
d$IP = factor(d$IP)
table(d$IP)
setwd("~/Documents/MPI")
setwd("SemanticsPragmatics/2015Course/Projects/Slonimska/NewAnalysis/Pragmatics_Slonimska/Analysis/SubjectVerbOrder/")
d = read.csv("wals-language.csv/language.csv")
d$IP = d$X93A.Position.of.Interrogative.Phrases.in.Content.Questions
d$IP[d$IP %in% c("3 Mixed")] = NA
d$IP[d$IP %in% c("")] = NA
d$IP = as.character(d$IP)
d$IP[d$IP=="1 Initial interrogative phrase"] = "Initial"
d$IP[d$IP=="2 Not initial interrogative phrase"] = "Non-Initial"
d$IP = factor(d$IP)
d$WO = d$X81A.Order.of.Subject..Object.and.Verb
d$SV = d$X82A.Order.of.Subject.and.Verb
d$SV[d$SV==""] = NA
d$SV[d$SV=="3 No dominant order"] = NA
d$SV = d$SV == "1 SV"
table(d$WO,d$IP) / rowSums(table(d$WO,d$IP))
m0 = glmer(SV ~ 1 + (1  | family) + (1| macroarea), data=d[!is.na(d$IP),], family = binomial)
m1 = glmer(SV ~ 1 + IP + (1 | family) + (1| macroarea), data=d[!is.na(d$IP),], family = binomial)
anova(m0,m1)
summary(m1)
logit2per(fixef(m1)[0])
fixef(m1)[0]
fixef(m1)
logit2per(sum(fixef(m1)))
m0 = glmer(SV ~ 1 + (1  +IP| family) + (1| macroarea),
data=d[!is.na(d$IP),], family = binomial)
m1 = glmer(SV ~ 1 + IP + (1 +IP | family) + (1| macroarea),
data=d[!is.na(d$IP),], family = binomial)
m1 = glmer(SV ~ 1 + IP + (1 | family) + (1 + IP| macroarea),
data=d[!is.na(d$IP),], family = binomial)
m0 = glmer(SV ~ 1 + (1  | family) + (1 + IP| macroarea),
data=d[!is.na(d$IP),], family = binomial)
anova(m0,m1)
library(sjPlot)
sjp.glmer(m1, 're')
sjp.glmer(m1, 're',sort.est = T, geom.colors = c(1,1))
table(d$macroarea)
sjp.glmer(m1, 're',sort.est = T)
sjp.glmer(m1, 're',sort.est = F)
sjp.glmer(m1, 're',sort.est = NULL)
?sjp.glmer
sjp.glmer(m1, 're',sort.est = "sort.all")
sjp.glmer(m1, 're',sort.est = "family")
sjp.glmer(m1, 're',sort.est = "(Intercept)")
exp(2.5715)
exp(sum(fixef(m1)))
exp(sum(fixef(m1)[2]))
logit2per(fixef(m1)[1])
table(d[!is.na(d$IP),]$SV)
table(d[!is.na(d$IP),]$SV)/sum(table(d[!is.na(d$IP),]$SV))
table(d$X26A.Prefixing.vs..Suffixing.in.Inflectional.Morphology, d$IP)
8/(36+8)
79/ (79 + 183)
d$Af = as.character(d$X26A.Prefixing.vs..Suffixing.in.Inflectional.Morphology)
d$Af = d$X26A.Prefixing.vs..Suffixing.in.Inflectional.Morphology
d$Af[d$Af %in% c("1 Little affixation","4 Equal prefixing and suffixing")]=NA
d$Af = as.numeric(d$Af)
d$Af
plotmeans(d$IP,d$Af)
library(gplots)
plotmeans(d$IP,d$Af)
plotmeans(d$IP~d$Af)
plotmeans(d$IP=="Initial"~d$Af)
table(d$Af)
d$Af = d$X26A.Prefixing.vs..Suffixing.in.Inflectional.Morphology
d$Af[d$Af %in% c("1 Little affixation","4 Equal prefixing and suffixing")]=NA
d$Af = d$X26A.Prefixing.vs..Suffixing.in.Inflectional.Morphology
d$Af = d$X26A.Prefixing.vs..Suffixing.in.Inflectional.Morphology
d$Af[d$Af %in% c("1 Little affixation","4 Equal prefixing and suffixing")]=NA
table(d$Af)
table(as.numeric(d$Af))
d$Af = d$X26A.Prefixing.vs..Suffixing.in.Inflectional.Morphology
d$Af[d$Af %in% c("1 Little affixation","4 Equal prefixing and suffixing","")]=NA
table(d$Af)
table(as.numeric(d$Af))
d$Af = as.numeric(factor(d$Af))
table(as.numeric(d$Af))
plotmeans(d$IP=="Initial"~d$Af)
dx =d[complete.cases(d[,c("Af","IP","SV")]),]
m0 = glmer(IP ~ 1 + (1  | family) + (1 + IP| macroarea),
data=dx, family = binomial)
m1 = glmer(IP ~ 1 + SV + (1 | family) + (1 + IP| macroarea),
data=dx, family = binomial)
m0 = glmer(IP ~ 1 + (1  | family) + (1 | macroarea),
data=dx, family = binomial)
m1 = glmer(IP ~ 1 + SV + (1 | family) + (1 | macroarea),
data=dx, family = binomial)
m2 = glmer(IP ~ 1 + SV + Af + (1 | family) + (1 + IP| macroarea),
data=dx, family = binomial)
m2 = glmer(IP ~ 1 + SV + Af + (1 | family) + (1 | macroarea),
data=dx, family = binomial)
anova(m0,m1,m2)
m3 = glmer(IP ~ 1 + SV*Af + (1 | family) + (1 | macroarea),
data=dx, family = binomial)
anova(m0,m1,m2,m3)
m0 = glmer(IP ~ 1 + (1  | family) + (1 + SV| macroarea),
data=d[!is.na(d$IP),], family = binomial)
m0 = glmer(IP ~ 1 + (1 + SV | family) + (1 + SV| macroarea),
data=d[!is.na(d$IP),], family = binomial)
m1 = glmer(IP ~ 1 + IP + (1 + SV| family) + (1 + SV| macroarea),
data=d[!is.na(d$IP),], family = binomial)
m1 = glmer(IP ~ 1 + SV + (1 + SV| family) + (1 + SV| macroarea),
data=d[!is.na(d$IP),], family = binomial)
anova(m0,m1)
summary(m1)
table(d$SV)
table(d$X82A.Order.of.Subject.and.Verb)
exp(2.6078)
sjp.glmer(m1,'fe')
d$SO = d$X82A.Order.of.Subject.and.Object
table(d$SO)
d$SO = d$X82A.Order.of.Subject.and.Object
table(d$SO)
table(d$WO)
d$SO = d$WO %in% c("1 SOV","2 SVO",'3 VSO')
d$SO[d$WO %in% c("","7 No dominant order")] = NA
table(d$SO)
table(d$SO,d$WO)
m0 = glmer(IP ~ 1 + (1 + SV | family) + (1 + SV| macroarea),
data=d[!is.na(d$IP),], family = binomial)
m1 = glmer(IP ~ 1 + SV + (1 + SV| family) + (1 + SV| macroarea),
data=d[!is.na(d$IP),], family = binomial)
m2 = glmer(IP ~ 1 + SV + SO + (1 + SV| family) + (1 + SV| macroarea),
data=d[!is.na(d$IP),], family = binomial)
anova(m0,m1,m2)
m0 = glmer(IP ~ 1 + (1 + SV | family) + (1 + SV| macroarea),
data=d[!is.na(d$IP) & !is.na(d$SO),], family = binomial)
m1 = glmer(IP ~ 1 + SV + (1 + SV| family) + (1 + SV| macroarea),
data=d[!is.na(d$IP)& !is.na(d$SO),], family = binomial)
m2 = glmer(IP ~ 1 + SV + SO + (1 + SV| family) + (1 + SV| macroarea),
data=d[!is.na(d$IP)& !is.na(d$SO),], family = binomial)
anova(m0,m1,m2)
m2 = glmer(IP ~ 1 + SV * SO + (1 + SV| family) + (1 + SV| macroarea),
data=d[!is.na(d$IP)& !is.na(d$SO),], family = binomial)
anova(m0,m1,m2)
m0 = glmer(IP ~ 1 + (1 + SV | family) + (1 + SV| macroarea),
data=d[!is.na(d$IP) & !is.na(d$SO),], family = binomial)
m1 = glmer(IP ~ 1 + SV + (1 + SV| family) + (1 + SV| macroarea),
data=d[!is.na(d$IP)& !is.na(d$SO),], family = binomial)
m2 = glmer(IP ~ 1 + SV + SO + (1 + SV| family) + (1 + SV| macroarea),
data=d[!is.na(d$IP)& !is.na(d$SO),], family = binomial)
m3 = glmer(IP ~ 1 + SV * SO + (1 + SV| family) + (1 + SV| macroarea),
data=d[!is.na(d$IP)& !is.na(d$SO),], family = binomial)
anova(m0,m1,m2)
anova(m0,m1,m2,m3)
summary(m3)
ranef(m1)
m0 = glmer(IP ~ 1 + (1 + SV | family) + (1 + SV| macroarea),
data=d[!is.na(d$IP),], family = binomial)
m1 = glmer(IP ~ 1 + SV + (1 + SV| family) + (1 + SV| macroarea),
data=d[!is.na(d$IP),], family = binomial)
ranef(m1)
ranef(m1)$macroarea[,1]
cor(ranef(m1)$macroarea[,1],ranef(m1)$macroarea[,2])
cor(ranef(m1)$family[,1],ranef(m1)$family[,2])
m0 = glmer(IP ~ 1 + (1  | family) + (1 | macroarea),
data=d[!is.na(d$IP),], family = binomial)
m1 = glmer(IP ~ 1 + SV + (1 | family) + (1 | macroarea),
data=d[!is.na(d$IP),], family = binomial)
anova(m0,m1)
m0 = glmer(IP ~ 1 + (1  | family) + (1 | macroarea),
data=d[!is.na(d$IP) & !is.na(d$SV),], family = binomial)
m1 = glmer(IP ~ 1 + SV + (1 | family) + (1 | macroarea),
data=d[!is.na(d$IP),], family = binomial)
anova(m0,m1)
m0 = glmer(IP ~ 1 + (1  | family) + (1 | macroarea),
data=d[!is.na(d$IP) & !is.na(d$SV),], family = binomial)
m1 = glmer(IP ~ 1 + SV + (1 | family) + (1 | macroarea),
data=d[!is.na(d$IP) & !is.na(d$SV),], family = binomial)
anova(m0,m1)
getMEText(anova(m0,m1), "main effect of subject-verb order", summary(m1)$coef['SVTRUE',])
logit2per(fixef(m1)[1])
logit2per(sum(fixef(m1)))
summary(m1)
m1 = glmer(IP ~ 1 + SV + (1 + SV| family) + (1 + SV| macroarea),
data=d[!is.na(d$IP),], family = binomial)
summary(m1)
try(setwd("U:/Pragmatics/New/Analysis/"))
try(setwd("~/Documents/MPI/SemanticsPragmatics/2015Course/Projects/Slonimska/NewAnalysis/Pragmatics_Slonimska/Analysis"))
# load data and filter unwanted languages
# (creates variable 'alldata')
source("RestrictionsApplied.R") # also loads PermutationTools.R
source("grammars.R")
source("makeDataVariables.R")
dim(d.unanalyzable.wh.m)
sum(is.na(d.wh.m))/ prod(dim(d.wh.m))
length(unique(families.d.wh))
length(unique(areas.d.wh))
alldata[alldata$meaning.id.fixed %in% whwords & alldata$analyzability!="unanalyzable",]
table(alldata$analyzability)
alldata[alldata$meaning.id.fixed %in% whwords & alldata$analyzability!="unanalyzable" & !is.na(alldata$analyzability),]
alldata[alldata$meaning.id.fixed %in% whwords & alldata$analyzability!="unanalyzable" & !is.na(alldata$analyzability),][1:10,]
alldata[alldata$meaning.id.fixed %in% whwords & alldata$analyzability!="unanalyzable" & !is.na(alldata$analyzability),c("word",'Language')]
alldata[alldata$meaning.id.fixed %in% whwords & alldata$analyzability!="unanalyzable" & !is.na(alldata$analyzability),c("word",'Language','meaning')]
names(alldata)
sort(table(alldata[alldata$meaning.id.fixed %in% whwords & alldata$analyzability!="unanalyzable" & !is.na(alldata$analyzability),c("word",'Language','meaning')]$Language))
alldata[alldata$meaning.id.fixed %in% whwords & alldata$Language=="Japanese",]
alldata[alldata$meaning.id.fixed %in% whwords & alldata$Language=="Japanese",c("word","meaning",'analyzability')]
write.csv(alldata[alldata$meaning.id.fixed %in% whwords & alldata$Language=="Japanese",c("word","meaning",'analyzability')],
write.csv(
alldata[alldata$meaning.id.fixed %in% whwords & alldata$Language=="Japanese",c("word","meaning",'analyzability')],
"../Writeup/examples/Japanese_analyzability.csv")
names(alldata)
alldata[alldata$meaning.id.fixed %in% whwords & alldata$Language=="Japanese",c("word","meaning",'analyzability')]
unit = read.csv("~/Desktop/Stuff/EtymOnline_2013/Word loanword database/clld-wold2-dbe8bcf/data/unit.csv", stringsAsFactors = F)
unit[unit$name=='ikutsu',]
jap =
alldata[alldata$meaning.id.fixed %in% whwords & alldata$Language=="Japanese",c("word","meaning",'analyzability')]
write.csv(jap, "../Writeup/examples/Japanese_analyzability.csv")
unit[unit$name %in% jap$word,]
jap$word
unit[unit$name %in% jap$word,c("name",'comment')]
names(unit)
unit[unit$name %in% jap$word,c("name",'jsondata')]
t(unit[unit$name %in% jap$word,c("name",'jsondata')])
jap$word
jap
library(gplots)
setwd("~/Documents/MPI/ViniciusMultimodal/multimodalCommunicationGame/experiment/analysis/R/")
d = read.csv("../../data/FinalSignalData.csv")
d$game = d$game +1
#d = d[d$correct,]
plotmeans(trialLength~paste(modalityCondition,condition),
data=d[!duplicated(d$trialString),],
connect=list(1:2,3:4,5:6))
pdf("../../results/graphs/Signal1_Efficiency.pdf", width=10, height=6)
par(mfrow=c(1,2))
for(stimType in unique(d$condition)){
plotmeans(signalLength/1000~game,
data = d[d$modalityCondition=='vocal' & !duplicated(d$trialString)
& d$condition==stimType,],
col=1,barcol = 1,n.label = F,
ylim=c(0,20),
xlab="Game",
ylab="Signal length (s)", las=1)
plotmeans(signalLength/1000~game,
data = d[d$modalityCondition=='multi' & !duplicated(d$trialString)
& d$condition==stimType,],
add=T,col=2,barcol = 2,
xaxt='n',
n.label = F)
plotmeans(signalLength/1000~game,
data = d[d$modalityCondition=='visual' & !duplicated(d$trialString)
& d$condition==stimType,],
add=T,col=3,barcol = 3,n.label = F,
xaxt='n')
if(stimType=="Auditory"){
legend(2.5,10,legend=c('Visual','Multimodal','Acoustic'), col=3:1,lty=1,pch=1)
}
title(main=stimType)
}
dev.off()
