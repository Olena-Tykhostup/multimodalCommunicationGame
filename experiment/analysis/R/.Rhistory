v$freq_week_4 = table(d2[d2$week==4,]$sign_value)[v$sign]
v$freq_week_1_withinColour = 0
v$freq_week_4_withinColour = 0
dxx = d2[d2$week==1,]
signCounts = table(d2[d2$week==1,]$sign_value)
signCounts = signCounts / sum(signCounts)
signCounts
signCounts[v[v$sign %in% signCounts,]$sign]
setwd("~/Documents/MPI/KangSukColours/ColourExperiment/processing/")
colourNumbers = c("1","5","7","14",'18','24')
colourNames = c("red",'brown','black','green','yellow','pink')
names(colourNames) = colourNumbers
colourNamesDark = c("dark red", 'orange', 'gray', 'dark green','gold', 'purple')
checkIconicity = function(x){
tx = table(x[x!=''])
if(length(tx)==0){
return(NA)
}
if(length(tx)==1){
return(names(tx)[1])
} else{
print(paste("Warning: different iconicity values for sign"))
print(tx)
return(names(sort(tx,decreasing = T))[1])
}
}
getDetails = function(x){
x = strsplit(x,"_")[[1]]
y = strsplit(x[5],"-")[[1]]
return(c(week=as.numeric(x[3]), session=as.numeric(x[4]),y[1],y[2]))
}
d = read.csv("../data/processedData/variants.csv", stringsAsFactors = F, quote='')
d[,c("week",'session','part1','part2')] = t(sapply(d$filename,getDetails))
d$week = as.numeric(d$week)
d = d[order(d$week,d$session,d$sign_start),]
#d = d[d$sign_value!='SAME',]
d = d[d$sign_value!='',]
d = d[d$sign_value!='?',]
d[d$sign_value=="FOLWER",]$sign_value = "FLOWER"
d[d$sign_value=="BIGHT",]$sign_value = "BRIGHT"
d[d$sign_value=="SIGINING",]$sign_value = "SIGNING"
d$sign_value = gsub("^ ","", d$sign_value)
d$sign_value = gsub(" $","", d$sign_value)
d$sign_value = toupper(d$sign_value)
# make sure that all iconicity ratings are the same
d$iconic[d$iconic==""] = NA
ndiff = tapply(d$iconic, d$sign_value, function(x){(length(unique(x[!is.na(x)])))})
names(ndiff) = tapply(d$sign_value, d$sign_value, function(x){head(x,1)})
ndiff[ndiff>1]
iconicityMeasures = tapply(d$iconic, d$sign_value, checkIconicity)
d$iconic = iconicityMeasures[d$sign_value]
# trial lengths
trialLengths = tapply(d$trial_length,d$trial_start,head,n=1)/1000
trialStart = tapply(d$trial_start,d$trial_start,head,n=1)/1000
plot(trialLengths~trialStart)
plot(d$sign_length~d$sign_start)
#boxplot(d$sign_length~d$iconic, ylab='Sign duration', xlab='Iconic')
d2 = d[order(d$week,d$session, d$sign_start),]
sel = d2$trial_value=='19' & !d2$T0Check & nchar(d2$sign_value)>0
signs  = unique(d2[sel,]$sign_value)
set.seed(1211)
cols = sample(rainbow(length(signs)))
names(cols) = signs
plot(rank(d2[sel,]$sign_start),rep(1,sum(sel)), col=cols[d2[sel,]$sign_value], pch=16)
tapply(d$sign_value, d$week, function(X){length(unique(X))})
d$speakerName = sapply(1:nrow(d),function(X){
d[X,c("part1","part2")][,d$speaker[X]]
})
inventedBy = tapply( d$speakerName, d$sign_value, head,n=1)
d$inventedBy = inventedBy[d$sign_value]
d$IX = grepl("IX",d$sign_notes)
d$OS = grepl("OS",d$sign_notes)
d$LW = grepl("LW",d$sign_notes)
d$SE = grepl("SE",d$sign_notes)
# absolute frequency
d$freq_week_4 = tapply(d[d$week==4,]$sign_value,d[d$week==4,]$sign_value, length)[d$sign_value]
# relative frequency, compared to other competitiors for the same colour
d$freq_week4_withinColour = NA
for(colx in colourNumbers){
d$freq_week4_withinColour[d$trial_value==colx] = 0
dx = d[d$trial_value==colx & d$week==4, ]
tx = table(dx$sign_value)
tx = tx / sum(tx)
d[d$trial_value==colx & d$week==4,]$freq_week4_withinColour = tx[d[d$trial_value==colx & d$week==4,]$sign_value]
}
variants = data.frame()
for(colourID in colourNumbers){
d2 =d[d$trial_value==colourID & nchar(d2[d2$week==1,]$sign_value)>0,]
v = data.frame(colour=colourID, colourName = colourNames[which(colourNumbers==colourID)],sign=unique(d2[d2$week==1,]$sign_value), stringsAsFactors = F)
v$freq_week_1 = table(d2[d2$week==1,]$sign_value)[v$sign]
v$freq_week_4 = table(d2[d2$week==4,]$sign_value)[v$sign]
v$freq_week_1_withinColour = 0
v$freq_week_4_withinColour = 0
signCounts = table(d2[d2$week==1,]$sign_value)
signCounts = signCounts / sum(signCounts)
v[v$sign %in% signCounts,]$freq_week1_withinColour = signCounts[v[v$sign %in% names(signCounts),]$sign]
signCounts = table(d2[d2$week==4,]$sign_value)
signCounts = signCounts / sum(signCounts)
v[v$sign %in% signCounts,]$freq_week4_withinColour = signCounts[v[v$sign %in% names(signCounts),]$sign]
v$iconic = tapply(d2$iconic, d2$sign_value, head,n=1)[v$sign]
v$check = tapply(d2[d2$week==1,]$T0Check,d2[d2$week==1,]$sign_value,function(X){sum(X,na.rm=T)>0})[v$sign]
v$inventedBy= tapply(d2$inventedBy, d2$sign_value, head, n=1)[v$sign]
v$averageLength_week_1 = tapply(d2[d2$week==1,]$sign_length, d2[d2$week==1,]$sign_value, mean)
v$averageTrialLength_week_1 = tapply(d2[d2$week==1,]$trial_length, d2[d2$week==1,]$sign_value, mean)
variants = rbind(variants,v)
}
variants$iconic[is.na(variants$iconic)] = "No"
variants$freq_week_4[is.na(variants$freq_week_4)] = 0
b = read.delim("../data/otherData/SignProperties.tab", sep='\t', encoding = 'utf-8', stringsAsFactors = F)
b[b$Sign=="FOLWER",]$Sign = "FLOWER"
b[b$Sign=="BIGHT",]$Sign = "BRIGHT"
b[b$Sign=="SIGINING",]$Sign = "SIGNING"
b$Sign = gsub("^ ","", b$Sign)
b$Sign = gsub(" $","", b$Sign)
b$Sign = toupper(b$Sign)
variants$BodyAnchor = b[match(variants$sign, b$Sign),]$Body.Anchor
write.csv(variants,file='../data/processedData/variants_summary.csv')
allTargetVars = sort(unique(d[d$trial_value %in% colourNumbers,]$sign_value))
cat(
paste(paste('"',allTargetVars,'"',sep=''),collapse='\n'),
file="../processing/ListOfVariants.txt")
write.csv(d, file="../data/processedData/variants_processed.csv")
variants$freq_week_4
colourID
d2 =d[d$trial_value==colourID & nchar(d2[d2$week==1,]$sign_value)>0,]
v = data.frame(colour=colourID, colourName = colourNames[which(colourNumbers==colourID)],sign=unique(d2[d2$week==1,]$sign_value), stringsAsFactors = F)
v$freq_week_1 = table(d2[d2$week==1,]$sign_value)[v$sign]
v$freq_week_4 = table(d2[d2$week==4,]$sign_value)[v$sign]
v$freq_week_1_withinColour = 0
v$freq_week_4_withinColour = 0
signCounts = table(d2[d2$week==1,]$sign_value)
signCounts = signCounts / sum(signCounts)
v[v$sign %in% signCounts,]$freq_week1_withinColour = signCounts[v[v$sign %in% names(signCounts),]$sign]
v[v$sign %in% signCounts,]
v
v$freq_week_1_withinColour = 0
v$freq_week_4_withinColour = 0
signCounts = table(d2[d2$week==1,]$sign_value)
signCounts = signCounts / sum(signCounts)
v[v$sign %in% names(signCounts),]$freq_week1_withinColour = signCounts[v[v$sign %in% names(signCounts),]$sign]
v[v$sign %in% names(signCounts),]
signCounts[v[v$sign %in% names(signCounts),]$sign]
v[v$sign %in% names(signCounts),]$freq_week1_withinColour
v$sign
setwd("~/Documents/MPI/KangSukColours/ColourExperiment/processing/")
colourNumbers = c("1","5","7","14",'18','24')
colourNames = c("red",'brown','black','green','yellow','pink')
names(colourNames) = colourNumbers
colourNamesDark = c("dark red", 'orange', 'gray', 'dark green','gold', 'purple')
checkIconicity = function(x){
tx = table(x[x!=''])
if(length(tx)==0){
return(NA)
}
if(length(tx)==1){
return(names(tx)[1])
} else{
print(paste("Warning: different iconicity values for sign"))
print(tx)
return(names(sort(tx,decreasing = T))[1])
}
}
getDetails = function(x){
x = strsplit(x,"_")[[1]]
y = strsplit(x[5],"-")[[1]]
return(c(week=as.numeric(x[3]), session=as.numeric(x[4]),y[1],y[2]))
}
d = read.csv("../data/processedData/variants.csv", stringsAsFactors = F, quote='')
d[,c("week",'session','part1','part2')] = t(sapply(d$filename,getDetails))
d$week = as.numeric(d$week)
d = d[order(d$week,d$session,d$sign_start),]
#d = d[d$sign_value!='SAME',]
d = d[d$sign_value!='',]
d = d[d$sign_value!='?',]
d[d$sign_value=="FOLWER",]$sign_value = "FLOWER"
d[d$sign_value=="BIGHT",]$sign_value = "BRIGHT"
d[d$sign_value=="SIGINING",]$sign_value = "SIGNING"
d$sign_value = gsub("^ ","", d$sign_value)
d$sign_value = gsub(" $","", d$sign_value)
d$sign_value = toupper(d$sign_value)
# make sure that all iconicity ratings are the same
d$iconic[d$iconic==""] = NA
ndiff = tapply(d$iconic, d$sign_value, function(x){(length(unique(x[!is.na(x)])))})
names(ndiff) = tapply(d$sign_value, d$sign_value, function(x){head(x,1)})
ndiff[ndiff>1]
iconicityMeasures = tapply(d$iconic, d$sign_value, checkIconicity)
d$iconic = iconicityMeasures[d$sign_value]
# trial lengths
trialLengths = tapply(d$trial_length,d$trial_start,head,n=1)/1000
trialStart = tapply(d$trial_start,d$trial_start,head,n=1)/1000
plot(trialLengths~trialStart)
plot(d$sign_length~d$sign_start)
#boxplot(d$sign_length~d$iconic, ylab='Sign duration', xlab='Iconic')
d2 = d[order(d$week,d$session, d$sign_start),]
sel = d2$trial_value=='19' & !d2$T0Check & nchar(d2$sign_value)>0
signs  = unique(d2[sel,]$sign_value)
set.seed(1211)
cols = sample(rainbow(length(signs)))
names(cols) = signs
plot(rank(d2[sel,]$sign_start),rep(1,sum(sel)), col=cols[d2[sel,]$sign_value], pch=16)
tapply(d$sign_value, d$week, function(X){length(unique(X))})
d$speakerName = sapply(1:nrow(d),function(X){
d[X,c("part1","part2")][,d$speaker[X]]
})
inventedBy = tapply( d$speakerName, d$sign_value, head,n=1)
d$inventedBy = inventedBy[d$sign_value]
d$IX = grepl("IX",d$sign_notes)
d$OS = grepl("OS",d$sign_notes)
d$LW = grepl("LW",d$sign_notes)
d$SE = grepl("SE",d$sign_notes)
# absolute frequency
d$freq_week_4 = tapply(d[d$week==4,]$sign_value,d[d$week==4,]$sign_value, length)[d$sign_value]
# relative frequency, compared to other competitiors for the same colour
d$freq_week4_withinColour = NA
for(colx in colourNumbers){
d$freq_week4_withinColour[d$trial_value==colx] = 0
dx = d[d$trial_value==colx & d$week==4, ]
tx = table(dx$sign_value)
tx = tx / sum(tx)
d[d$trial_value==colx & d$week==4,]$freq_week4_withinColour = tx[d[d$trial_value==colx & d$week==4,]$sign_value]
}
variants = data.frame()
for(colourID in colourNumbers){
d2 =d[d$trial_value==colourID & nchar(d2[d2$week==1,]$sign_value)>0,]
v = data.frame(colour=colourID, colourName = colourNames[which(colourNumbers==colourID)],sign=unique(d2[d2$week==1,]$sign_value), stringsAsFactors = F)
v$freq_week_1 = table(d2[d2$week==1,]$sign_value)[v$sign]
v$freq_week_4 = table(d2[d2$week==4,]$sign_value)[v$sign]
v$freq_week_1_withinColour = 0
v$freq_week_4_withinColour = 0
signCounts = table(d2[d2$week==1,]$sign_value)
signCounts = signCounts / sum(signCounts)
v[v$sign %in% names(signCounts),]$freq_week_1_withinColour = signCounts[v[v$sign %in% names(signCounts),]$sign]
signCounts = table(d2[d2$week==4,]$sign_value)
signCounts = signCounts / sum(signCounts)
v[v$sign %in% names(signCounts),]$freq_week_4_withinColour = signCounts[v[v$sign %in% names(signCounts),]$sign]
v$iconic = tapply(d2$iconic, d2$sign_value, head,n=1)[v$sign]
v$check = tapply(d2[d2$week==1,]$T0Check,d2[d2$week==1,]$sign_value,function(X){sum(X,na.rm=T)>0})[v$sign]
v$inventedBy= tapply(d2$inventedBy, d2$sign_value, head, n=1)[v$sign]
v$averageLength_week_1 = tapply(d2[d2$week==1,]$sign_length, d2[d2$week==1,]$sign_value, mean)
v$averageTrialLength_week_1 = tapply(d2[d2$week==1,]$trial_length, d2[d2$week==1,]$sign_value, mean)
variants = rbind(variants,v)
}
variants$iconic[is.na(variants$iconic)] = "No"
variants$freq_week_4[is.na(variants$freq_week_4)] = 0
b = read.delim("../data/otherData/SignProperties.tab", sep='\t', encoding = 'utf-8', stringsAsFactors = F)
b[b$Sign=="FOLWER",]$Sign = "FLOWER"
b[b$Sign=="BIGHT",]$Sign = "BRIGHT"
b[b$Sign=="SIGINING",]$Sign = "SIGNING"
b$Sign = gsub("^ ","", b$Sign)
b$Sign = gsub(" $","", b$Sign)
b$Sign = toupper(b$Sign)
variants$BodyAnchor = b[match(variants$sign, b$Sign),]$Body.Anchor
write.csv(variants,file='../data/processedData/variants_summary.csv')
allTargetVars = sort(unique(d[d$trial_value %in% colourNumbers,]$sign_value))
cat(
paste(paste('"',allTargetVars,'"',sep=''),collapse='\n'),
file="../processing/ListOfVariants.txt")
write.csv(d, file="../data/processedData/variants_processed.csv")
variants$freq_week_4
variants$freq_week_4_withinColour
hist(variants$freq_week_4_withinColour)
biasModel = lm(log(1 + freq_week_4_withinColour) ~ + iconic + log(averageLength_week_1+1) + inventedBy + log(averageTrialLength_week_1+1) +  log(freq_week_1+1), data=variants)
biasModelRes = summary(biasModel)$coef
biasModelRes[,1:3] = round(biasModelRes[,1:3],2)
biasModelRes[,4] = round(biasModelRes[,4],2)
summary(biasModel)
biasModel = lm(log(1 + freq_week_4_withinColour) ~ + iconic + log(averageLength_week_1+1) + inventedBy + log(averageTrialLength_week_1+1) +  log(freq_week_1_withinColour+1), data=variants)
summary(biasModel)
biasModel = lm(log(1 + freq_week_4_withinColour) ~ + iconic + log(averageLength_week_1+1) + inventedBy + log(averageTrialLength_week_1+1) +  log(freq_week_1+1), data=variants)
biasModel2 = lm(log(1 + freq_week_4_withinColour) ~ + iconic + log(averageLength_week_1+1) + inventedBy + log(averageTrialLength_week_1+1) +  log(freq_week_1+1), data=variants[variants$colourName %in% c('black'),])
summary(biasModel2)
plot(variants$freq_week_1, jitter(variants$freq_week_4), pch=16, col=rgb(0,0,0,0.2), ylab='Frequency in week 4', xlab='Frequency in week 1')
plot(variants$freq_week_1_withinColour, jitter(variants$freq_week_4_withinColour), pch=16, col=rgb(0,0,0,0.2), ylab='Frequency in week 4', xlab='Frequency in week 1')
variants$colourName
plot(variants$freq_week_1_withinColour, jitter(variants$freq_week_4_withinColour), pch=16, col=variants$colourName, ylab='Frequency in week 4', xlab='Frequency in week 1')
variants$iconic = as.factor(variants$iconic)
variants$inventedBy = as.factor(variants$inventedBy)
f = ctree(freq_week_4_withinColour ~ freq_week_1 + iconic + check + inventedBy, data=variants, control=ctree_control(mincriterion = 0.5))
plot(f)
library(party)
variants$iconic = as.factor(variants$iconic)
variants$inventedBy = as.factor(variants$inventedBy)
f = ctree(freq_week_4_withinColour ~ freq_week_1 + iconic + check + inventedBy, data=variants, control=ctree_control(mincriterion = 0.5))
plot(f)
f = ctree(freq_week_4_withinColour ~ freq_week_1 + iconic + check + inventedBy + colourName, data=variants, control=ctree_control(mincriterion = 0.5))
f = ctree(freq_week_4_withinColour ~ freq_week_1 + iconic + check + inventedBy + factor(colourName), data=variants, control=ctree_control(mincriterion = 0.5))
plot(f)
variants$iconic = as.factor(variants$iconic)
variants$inventedBy = as.factor(variants$inventedBy)
f = ctree(freq_week_4_withinColour ~ freq_week_1 + iconic + check + inventedBy + factor(colourName), data=variants, control=ctree_control(mincriterion = 0.5))
plot(f)
f2 = ctree(freq_week_4 ~ iconic + T0Check + speakerName + sign_length+ inventedBy, data=d3, control=ctree_control(mincriterion = 0.95))
plot(f2, inner_panel=node_inner(f2,id=F),terminal_panel=node_barplot)
f2 = ctree(freq_week_4 ~ iconic + T0Check + speakerName + sign_length+ inventedBy, data=d3, control=ctree_control(mincriterion = 0.95))
d3 = d
d3$iconic[is.na(d3$iconic)] = "No"
d3$freq_week_4[is.na(d3$freq_week_4)] = 0
for(i in c('iconic','speakerName','inventedBy')){
d3[,i] = as.factor(d3[,i])
}
summary(lm(log(1 + freq_week_4) ~ iconic + T0Check + inventedBy, data=d3))
f2 = ctree(freq_week_4 ~ iconic + T0Check + speakerName + sign_length+ inventedBy, data=d3, control=ctree_control(mincriterion = 0.95))
plot(f2, inner_panel=node_inner(f2,id=F),terminal_panel=node_barplot)
plot(
as.vector(inventedBy),
as.vector(table(d$inventedBy)),
xlab='Number of variants innovated', ylab="Frequency of variants", col=1, ylim=c(50,100))
text(as.vector(inventedBy), as.vector(table(d$inventedBy)), names((inventedBy)),pos=3)
inventedBy = tapply(d$sign_value,d$inventedBy, function(X){length(unique(X))})
plot(
as.vector(inventedBy),
as.vector(table(d$inventedBy)),
xlab='Number of variants innovated', ylab="Frequency of variants", col=1, ylim=c(50,100))
text(as.vector(inventedBy), as.vector(table(d$inventedBy)), names((inventedBy)),pos=3)
plot(
as.vector(inventedBy),
as.vector(table(d$inventedBy)))
inventedBy
tapply(variants$freq_week_4_withinColour, variants$inventedBy, mean)
plot(
as.vector(inventedBy),
as.vector(freqWithinVarByInventor))
freqWithinVarByInventor = tapply(variants$freq_week_4_withinColour, variants$inventedBy, mean)
plot(
as.vector(inventedBy),
as.vector(freqWithinVarByInventor))
text(as.vector(inventedBy), as.vector(freqWithinVarByInventor), names((inventedBy)),pos=3)
adopted = sapply(sort(unique(d$speakerName)), function(X){
x = d[d$speakerName==X,]$inventedBy
x2 = tapply(d[d$speakerName==X,]$sign_value, d[d$speakerName==X,]$inventedBy, function(z){length(unique(z))})
sum(x2[names(x2)!=X])
})
plot(inventedBy,adopted, ylim=c(0,35), xlim=c(0,35), xlab="Number of variants invented", ylab="Number of variants adopted")
abline(0,1, col='gray')
text(inventedBy,adopted,names(inventedBy), pos=3)
plot(inventedBy,adopted)
inventedBy
library(ggplot2)
setwd("~/Documents/MPI/KangSukColours/ColourExperiment/analysis/")
d = read.csv("../data/processedData/variants_processed.csv", stringsAsFactors = F)
colourNumbers = c("1","5","7","14",'18','24')
colourNames = c("red",'brown','black','green','yellow','pink')
names(colourNames) = colourNumbers
colourNamesDark = c("dark red", 'orange', 'gray', 'dark green','gold', 'purple')
d = d[d$trial_value %in% colourNumbers,]
d$trialColourName = colourNames[d$trial_value]
d$trialColourName = factor(d$trialColourName, levels = colourNames)
sun = table(d[d$sign_value=="SUN",]$week)
yellow = table(d[d$sign_value=="GREEN1-1",]$week)
barplot(rbind(sun,yellow), beside=T, xlab='week', ylab='frequency', ylim=c(0,20),col=1:2)
legend(1,20,legend=c("SUN","GREEN1-1"), col=1:2, pch=15)
pdf("../results/descriptive/graphs/IconicityByWeek.pdf")
barplot(table(d$iconic,d$week), col=1:2, xlab='Week')
legend(1.5,150,legend=c("Iconic","Not iconic"), col=2:1, pch=15)
dev.off()
w1 = table(d[d$week==1,]$iconic, d[d$week==1,]$trialColourName)
w4 = table(d[d$week==4,]$iconic, d[d$week==4,]$trialColourName)
pdf("../results/descriptive/graphs/IconicityByWeekByColour.pdf")
barplot(cbind(w1,c(NA,NA),w4), col=1:2, las=2)
abline(v=7.9)
axis(1,line=2.5,at=c(4,12), labels=c("Week 1","Week 3"), tick=F, lwd=0)
legend(1.5,150,legend=c("Iconic","Not iconic"), col=2:1, pch=15)
dev.off()
library(gplots)
pdf("../results/descriptive/graphs/LengthByWeek_YELLOW.pdf")
plotmeans(d[d$sign_value=="YELLOW",]$sign_length~d[d$sign_value=="YELLOW",]$week, xlab='Week', ylab="Length (ms)", main='Length of the sign YELLOW')
dev.off()
pdf("../results/descriptive/graphs/LengthByWeek.pdf")
plotmeans(d$sign_length~d$week, xlab='Week', ylab="Length (ms)", main='Length of signs')
dev.off()
pdf("../results/descriptive/graphs/IconicByWeekByPart.pdf", width=8, height=5)
partIconic = table(d$iconic,d$speakerName,d$week)
cbind(partIconic[,,1],partIconic[,,2])
barplot(cbind(partIconic[,,1],partIconic[,,2]), col=1:2)
abline(v=4.9)
text(c(2.5,7.5),c(65,65), c("Week 1", "Week 4"))
legend(5,50, c("Iconic","Non-iconic"), col=2:1, pch=15)
dev.off()
inventedBy = tapply(d$sign_value,d$inventedBy, function(X){length(unique(X))})
inventedBy
plot(
as.vector(inventedBy),
as.vector(table(d$inventedBy)),
xlab='Number of variants innovated', ylab="Frequency of variants", col=1, ylim=c(50,100))
text(as.vector(inventedBy), as.vector(table(d$inventedBy)), names((inventedBy)),pos=3)
freqWithinVarByInventor = tapply(variants$freq_week_4_withinColour, variants$inventedBy, mean)
plot(
as.vector(inventedBy),
as.vector(freqWithinVarByInventor),
xlab='Number of variants innovated', ylab="Frequency of variants", col=1, ylim=c(50,100))
text(as.vector(inventedBy), as.vector(freqWithinVarByInventor), names((inventedBy)),pos=3)
plot(
as.vector(inventedBy),
as.vector(freqWithinVarByInventor),
xlab='Number of variants innovated', ylab="Frequency of variants", col=1)
plot(
as.vector(inventedBy),
as.vector(freqWithinVarByInventor),
xlab='Number of variants innovated', ylab="Mean fitness of variants", col=1)
text(as.vector(inventedBy), as.vector(freqWithinVarByInventor), names((inventedBy)),pos=3)
plot(
as.vector(inventedBy),
as.vector(freqWithinVarByInventor),
xlab='Number of variants innovated', ylab="Mean fitness of variants", col=1, ylim=c(0,0.15))
text(as.vector(inventedBy), as.vector(freqWithinVarByInventor), names((inventedBy)),pos=3)
as.vector(inventedBy),
as.vector(freqWithinVarByInventor),
xlab='Number of variants innovated', ylab="Mean fitness of variants", col=1, ylim=c(0,0.15))
text(as.vector(inventedBy), as.vector(freqWithinVarByInventor), names((inventedBy)),pos=3)
plot(
as.vector(inventedBy),
as.vector(freqWithinVarByInventor),
xlab='Number of variants innovated', ylab="Mean fitness of variants", col=1, ylim=c(0,0.15))
text(as.vector(inventedBy), as.vector(freqWithinVarByInventor), names((inventedBy)),pos=3)
d = read.csv("/Users/sgroberts/Documents/MPI/ViniciusMultimodal/multimodalCommunicationGame/experiment/results/csv/D19_TT_Coded.csv")
head(d)
head(d)
tapply(d[d$modality=="Visual",]$signalLength, d[d$modality=="Visual",]$turnID, sum)
d[d$modality=="Visual",]$signalLength
d$signalLength
d$modality
d$modality[1]
as.character(d$modality[1])
d = read.csv("/Users/sgroberts/Documents/MPI/ViniciusMultimodal/multimodalCommunicationGame/experiment/results/csv/D19_TT_Coded.csv")
tapply(d[d$modality=="Visual",]$signalLength, d[d$modality=="Visual",]$turnID, sum)
tapply(d[d$modality=="Acoustic",]$signalLength, d[d$modality=="Acoustic",]$turnID, sum)
vis = tapply(d[d$modality=="Visual",]$signalLength, d[d$modality=="Visual",]$turnID, sum)
ac = tapply(d[d$modality=="Acoustic",]$signalLength, d[d$modality=="Acoustic",]$turnID, sum)
plot(vis,type='l')
plot(ac,type='l')
plot(vis,type='l')
lines(ac,1:length(ac),type='l')
lines(1:length(ac),ac,type='l')
vis[unique(sort(d$turnID))]
vis = tapply(d[d$modality=="Visual",]$signalLength, d[d$modality=="Visual",]$turnID, sum)
ac = tapply(d[d$modality=="Acoustic",]$signalLength, d[d$modality=="Acoustic",]$turnID, sum)
plot(vis,names(vis),type='l')
lines(names(ac),ac,type='l')
plot(vis~names(vis),type='l')
lines(names(ac),ac,type='l')
plot(vis~names(vis),type='l')
lines(names(ac),ac,type='l', col=2)
table(d$modality)
barplot(table(d$modality))
d = read.csv("/Users/sgroberts/Documents/MPI/ViniciusMultimodal/multimodalCommunicationGame/experiment/results/csv/D19_TT_Coded.csv")
head(d)
setwd("~/Documents/MPI/ViniciusMultimodal/multimodalCommunicationGame/experiment/analysis/R/")
setwd("~/Documents/MPI/ViniciusMultimodal/multimodalCommunicationGame/experiment/analysis/R/")
d = read.csv("../../data/csv/D19_TT_Coded.csv")
head(d)
tapply(d$signalLength,paste(d$game,d$trial),sum)
table(d$modality)
tapply(d[d$modality=="Acoustic",]$signalLength,d[d$modality=="Acoustic",]$trialString,sum)
d$trialString = paste(d$condition, d$game,d$trial)
tapply(d[d$modality=="Acoustic",]$signalLength,d[d$modality=="Acoustic",]$trialString,sum)
tapply(d[d$modality=="Acoustic",]$signalLength,d[d$modality=="Acoustic",]$game,sum)
tapply(d[d$modality=="Acoustic",]$signalLength,d[d$modality=="Acoustic",]$game,sum)
table(d$modality)
tapply(d[d$modality=="Visual",]$signalLength,d[d$modality=="Visual",]$game,sum)
table(d$condition)
aa = tapply(d[d$modality=="Acoustic" & d$condition=="Auditory",]$signalLength,d[d$modality=="Acoustic" & d$condition=="Auditory",]$game,sum)
av = tapply(d[d$modality=="Acoustic" & d$condition=="Visual",]$signalLength,d[d$modality=="Acoustic" & d$condition=="Visual",]$game,sum)
vv = tapply(d[d$modality=="Visual"& d$condition=="Visual",]$signalLength,d[d$modality=="Visual"& d$condition=="Visual",]$game,sum)
va = tapply(d[d$modality=="Visual" & d$condition=="Auditory",]$signalLength,d[d$modality=="Visual" & d$condition=="Auditory",]$game,sum)
aa
va
av
vv
aa = tapply(d[d$modality=="Acoustic" & d$condition=="Auditory",]$signalLength,d[d$modality=="Acoustic" & d$condition=="Auditory",]$game,sum)[0:3]
tapply(d[d$modality=="Acoustic" & d$condition=="Auditory",]$signalLength,d[d$modality=="Acoustic" & d$condition=="Auditory",]$game,sum)[0:3]
aa = tapply(d[d$modality=="Acoustic" & d$condition=="Auditory",]$signalLength,d[d$modality=="Acoustic" & d$condition=="Auditory",]$game,sum)[c("0",'1','2','3')]
tapply(d[d$modality=="Acoustic" & d$condition=="Auditory",]$signalLength,d[d$modality=="Acoustic" & d$condition=="Auditory",]$game,sum)[c("0",'1','2','3')]
aa = tapply(d[d$modality=="Acoustic" & d$condition=="Auditory",]$signalLength,d[d$modality=="Acoustic" & d$condition=="Auditory",]$game,sum)[c("0",'1','2','3')]
av = tapply(d[d$modality=="Acoustic" & d$condition=="Visual",]$signalLength,d[d$modality=="Acoustic" & d$condition=="Visual",]$game,sum)[c("0",'1','2','3')]
vv = tapply(d[d$modality=="Visual"& d$condition=="Visual",]$signalLength,d[d$modality=="Visual"& d$condition=="Visual",]$game,sum)[c("0",'1','2','3')]
va = tapply(d[d$modality=="Visual" & d$condition=="Auditory",]$signalLength,d[d$modality=="Visual" & d$condition=="Auditory",]$game,sum)[c("0",'1','2','3')]
aa
av
va
vv
setwd("~/Documents/MPI/ViniciusMultimodal/multimodalCommunicationGame/experiment/analysis/R/")
d = read.csv("../../data/csv/D19_TT_Coded.csv")
d$trialString = paste(d$condition, d$game,d$trial)
getTimes = function(d,prod,stim){
ret = tapply(d[d$modality==prod & d$condition==stim,]$signalLength,d[d$modality==prod & d$condition==stim,]$game,sum)[c("0",'1','2','3')]
ret[is.na(ret)] = 0
return(ret)
}
aa = getTimes(d,"Acoustic" ,"Auditory")
av = getTimes(d,"Acoustic","Visual")
vv = getTimes(d,"Visual","Visual")
va = getTimes(d,"Visual","Auditory")
aa
va
vv
va
aa
av
barplot(cbind(aa,av,vv,va))
barplot(cbind(aa,av,vv,va),beside=F)
barplot(cbind(aa,av,vv,va),beside=T)
barplot(rbind(aa,av,vv,va),beside=T)
barplot(cbind(aa,av,vv,va),beside=T)
barplot(cbind(aa,va,av,vv),beside=T)
aa = getTimes(d,"Acoustic" ,"Auditory")
va = getTimes(d,"Visual","Auditory")
av = getTimes(d,"Acoustic","Visual")
vv = getTimes(d,"Visual","Visual")
barplot(cbind(aa,va,av,vv),beside=T)
head(d)
plotmeans(d$signalLength~d$condition)
plotmeans(d$signalLength~paste(d$modality, d$condition))
