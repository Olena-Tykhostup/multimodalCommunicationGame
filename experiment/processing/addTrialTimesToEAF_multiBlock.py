# For multimodal experiment
# Take an elan file of the video, with a tier called 'synch' with two annotations:
# "player 1 start" and "player 2 start", which marks the start of the audio of the web program.
# And also take the csv file generated by the program
# add annotations to the elan file to mark out trial boundaries.

# This version allows 2 blocks per elan file

# Requires pympi.   https://github.com/dopefishh/pympi


import pympi
import glob
import sys

turnmargin = 100

adjustPrevTurns = False


eaffolder = '../data/eafWithSynchTier/'
destinationFolder = '../data/eafWithTrials'

def getExperDetails():
	o = open("../data/ExperimentDetails.tab")
	e = o.read()
	o.close()
	EDetails = dict()
	for line in [x for x in e.split("\n") if len(x.strip())>3]:
		bits = line.split("\t")
		# dyad number: condition, first block, stim order list
		EDetails[bits[1]] = (bits[0],bits[2],bits[3])
	
	return EDetails
	
def loadCSV(filename):
	o = open(filename)
	trials = o.read()
	o.close()
	trials =  [x.split(",") for x in trials.replace('"',"").replace("\r","").split("\n") if len(x)>1]
	
	header = trials[0]
	trials = trials[1:]
	trials_out = []
	
	# if the participant has pressed 'PrevRound', delete the last round
	for x in trials:

		if x==["PrevRound"]:
			if len(trials_out)>0 and adjustPrevTurns:
				trials_out.pop()
		else:
			trials_out.append(x)
	
	return trials_out, header


EDetails = getExperDetails()

for eafpath in glob.glob(eaffolder+'*.eaf'):

	filename = eafpath[(eafpath.rindex("/")+1):eafpath.rindex(".")]
	
	dyadNum = filename[1:]

	currentEDetails = EDetails[dyadNum]
	
	blockOrder = ["IMG","SOU"]
	if currentEDetails[1]=="SOU":
		blockOrder = ["SOU","IMG"]
	
	eaffile = pympi.Eaf(eafpath)
	eaffile.add_tier("Trials 1")
	eaffile.add_tier("Trials 2")
	
	soundStart = eaffile.get_annotation_data_for_tier("synch")
	
	for blockNum in range(len(blockOrder)):
		block = blockOrder[blockNum]
		
		for player in ["1","2"]:
			#27_05_D15_P1_IMG0
			datafile = glob.glob("../data/csvFromWebProgram/*"+filename + "_P"+player+"_"+block+"*.txt")[0]
			
			trials, header = loadCSV(datafile)
			
		
			tierName = "Trials "+player
			
			

			soundStartTime = [x for x in soundStart if x[2]=="player "+player+" start"]
			soundStartTime = sorted(soundStartTime, key = lambda x: x[0])
			# Choose either the first or second tag
			soundStartTime = int(soundStartTime[blockNum][0])
			
			print([player,block,soundStartTime])
			
			curTime = 0
		
			for t in trials:

				start = curTime
				end = int(t[header.index("timeSinceStart")]) + soundStartTime
				curTime = end
				value = t[header.index("choiceItem")]
			
				if value !="NextRound":
# 					tag = "#".join([t[header.index(x)] for x in ["game","stage"]])
# 					tag += "#" + str(int(t[header.index("currentTarget")])+1)
# 					tag += "#" + "_".join([str(int(x)+1) for x in t[header.index("currentDistractors")].split("_")])
# 					tag += "#" + str(int(t[header.index("choiceItem")])+1)
					
					
					Ga = t[header.index("game")]
					Tu = t[header.index("stage")]
					Ta = str(int(t[header.index("currentTarget")])+1)
					Ch = str(int(t[header.index("choiceItem")])+1)
					optx = [str(int(x)+1) for x in t[header.index("currentDistractors")].split("_")]
					Op = "{"
					for o in optx:
						if o==Ch:
							Op += "*"+o+"* "
						else:
							Op += o + " "
					Op = Op[:-1]+"}"
				# Ga1 Tu3 Ta1 Op{*1* 6 2} Ch 4 		
					tag = "Ga"+Ga + " Tu"+Tu + " Ta" + Ta +" "+ Op + " Ch"+Ch
					
					eaffile.add_annotation(tierName, start, end, tag)
					
			
		
	eaffile.to_file("../data/eafWithTrialsTier/"+filename+"_TT"+".eaf")


	